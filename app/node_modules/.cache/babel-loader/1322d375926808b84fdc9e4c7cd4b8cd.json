{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/mac/Desktop/CurrencyExchanger/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\n\nvar _jsxFileName = \"/Users/mac/Desktop/CurrencyExchanger/app/src/Components/Content/CurrencyExchanger/CurrencyExchangerContainer.jsx\",\n    _this = this;\n\nimport React from \"react\"; // import { Col, Row } from \"react-bootstrap\";\n// import Form from \"react-bootstrap/Form\";\n// import swapCurrencyIcon from \"../../../Images/swapCurrencyIcon.svg\";\n\nimport CurrencyExchanger from \"./CurrencyExchanger\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Exchanger = function Exchanger(props) {\n  var inputEl = document.getElementById(\"changeInput\");\n  var resultEl = document.getElementById(\"getInput\");\n  var changeCur = document.getElementById(\"changeOption\");\n  var getCur = document.getElementById(\"getOption\");\n\n  var swapCurrency = function swapCurrency(a, b) {\n    inputEl.value = resultEl.value;\n    changeCur.value = b;\n    getCur.value = a;\n    calculate();\n  };\n\n  var getExchangeData = function getExchangeData(data) {\n    var result = {};\n\n    var addToResult = function addToResult(key, value) {\n      var invert = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      if (!result[key]) {\n        result[key] = [];\n      }\n\n      if (!result[key].includes(value)) result[key].push(value);\n\n      if (invert) {\n        addToResult(value, key, false);\n      }\n    };\n\n    data.forEach(function (value) {\n      addToResult(value.ccy, value.base_ccy);\n    });\n    return result;\n  };\n\n  var getDeals = function getDeals(exchangeData, sellCurrency, buyCurrency) {\n    var deals = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    var direct = exchangeData[sellCurrency].includes(buyCurrency);\n\n    if (direct) {\n      deals.push(sellCurrency, buyCurrency);\n      return true;\n    }\n\n    if (sellCurrency === buyCurrency) return true;\n    if (deals.includes(sellCurrency)) return false;\n    deals.push(sellCurrency);\n\n    var _iterator = _createForOfIteratorHelper(exchangeData[sellCurrency]),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var neighbor = _step.value;\n\n        if (!deals.includes(neighbor)) {\n          if (neighbor === buyCurrency) {\n            deals.push(neighbor);\n          }\n\n          if (getDeals(exchangeData, neighbor, buyCurrency, deals)) {\n            return true;\n          }\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    alert(\"exchange is impossible\");\n    return false; //exchange is impossible.\n  };\n\n  var calculate = function calculate() {\n    var exchangeData = getExchangeData(props.data);\n    var deals = [];\n    var dealIsValid = getDeals(exchangeData, changeCur.value, getCur.value, deals);\n    var sum = inputEl.value || 0;\n\n    if (dealIsValid) {\n      var _loop = function _loop(i) {\n        var c1 = deals[i];\n        var c2 = deals[i + 1];\n        props.data.forEach(function (x) {\n          if (x.ccy === c1 && x.base_ccy === c2) {\n            sum *= x.buy;\n            return;\n          }\n\n          if (x.ccy === c2 && x.base_ccy === c1) {\n            sum *= 1 / x.sale;\n            return;\n          }\n        });\n      };\n\n      for (var i = 0; i < deals.length - 1; i++) {\n        _loop(i);\n      }\n    }\n\n    resultEl.value = Number.parseFloat(sum).toFixed(2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CurrencyExchanger, {\n    calculate: calculate,\n    availableCurrency: props.availableCurrency,\n    swapCurrency: swapCurrency,\n    changeCur: changeCur,\n    getCur: getCur\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Exchanger;\nexport default Exchanger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Exchanger\");","map":{"version":3,"sources":["/Users/mac/Desktop/CurrencyExchanger/app/src/Components/Content/CurrencyExchanger/CurrencyExchangerContainer.jsx"],"names":["React","CurrencyExchanger","Exchanger","props","inputEl","document","getElementById","resultEl","changeCur","getCur","swapCurrency","a","b","value","calculate","getExchangeData","data","result","addToResult","key","invert","includes","push","forEach","ccy","base_ccy","getDeals","exchangeData","sellCurrency","buyCurrency","deals","direct","neighbor","alert","dealIsValid","sum","i","c1","c2","x","buy","sale","length","Number","parseFloat","toFixed","availableCurrency"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAC3B,MAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAhB;AACA,MAAMC,QAAQ,GAAGF,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAjB;AACA,MAAME,SAAS,GAAGH,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAlB;AACA,MAAMG,MAAM,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAf;;AAEA,MAAMI,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAIC,CAAJ,EAAU;AAC7BR,IAAAA,OAAO,CAACS,KAAR,GAAgBN,QAAQ,CAACM,KAAzB;AACAL,IAAAA,SAAS,CAACK,KAAV,GAAkBD,CAAlB;AACAH,IAAAA,MAAM,CAACI,KAAP,GAAeF,CAAf;AACAG,IAAAA,SAAS;AACV,GALD;;AAOA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAU;AAChC,QAAMC,MAAM,GAAG,EAAf;;AAEA,QAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAMN,KAAN,EAA+B;AAAA,UAAlBO,MAAkB,uEAAT,IAAS;;AACjD,UAAI,CAACH,MAAM,CAACE,GAAD,CAAX,EAAkB;AAChBF,QAAAA,MAAM,CAACE,GAAD,CAAN,GAAc,EAAd;AACD;;AAED,UAAI,CAACF,MAAM,CAACE,GAAD,CAAN,CAAYE,QAAZ,CAAqBR,KAArB,CAAL,EAAkCI,MAAM,CAACE,GAAD,CAAN,CAAYG,IAAZ,CAAiBT,KAAjB;;AAElC,UAAIO,MAAJ,EAAY;AACVF,QAAAA,WAAW,CAACL,KAAD,EAAQM,GAAR,EAAa,KAAb,CAAX;AACD;AACF,KAVD;;AAYAH,IAAAA,IAAI,CAACO,OAAL,CAAa,UAACV,KAAD,EAAW;AACtBK,MAAAA,WAAW,CAACL,KAAK,CAACW,GAAP,EAAYX,KAAK,CAACY,QAAlB,CAAX;AACD,KAFD;AAIA,WAAOR,MAAP;AACD,GApBD;;AAsBA,MAAMS,QAAQ,GAAG,SAAXA,QAAW,CAACC,YAAD,EAAeC,YAAf,EAA6BC,WAA7B,EAAyD;AAAA,QAAfC,KAAe,uEAAP,EAAO;AACxE,QAAMC,MAAM,GAAGJ,YAAY,CAACC,YAAD,CAAZ,CAA2BP,QAA3B,CAAoCQ,WAApC,CAAf;;AACA,QAAIE,MAAJ,EAAY;AACVD,MAAAA,KAAK,CAACR,IAAN,CAAWM,YAAX,EAAyBC,WAAzB;AACA,aAAO,IAAP;AACD;;AAED,QAAID,YAAY,KAAKC,WAArB,EAAkC,OAAO,IAAP;AAClC,QAAIC,KAAK,CAACT,QAAN,CAAeO,YAAf,CAAJ,EAAkC,OAAO,KAAP;AAElCE,IAAAA,KAAK,CAACR,IAAN,CAAWM,YAAX;;AAVwE,+CAWnDD,YAAY,CAACC,YAAD,CAXuC;AAAA;;AAAA;AAWxE,0DAAiD;AAAA,YAAxCI,QAAwC;;AAC/C,YAAI,CAACF,KAAK,CAACT,QAAN,CAAeW,QAAf,CAAL,EAA+B;AAC7B,cAAIA,QAAQ,KAAKH,WAAjB,EAA8B;AAC5BC,YAAAA,KAAK,CAACR,IAAN,CAAWU,QAAX;AACD;;AAED,cAAIN,QAAQ,CAACC,YAAD,EAAeK,QAAf,EAAyBH,WAAzB,EAAsCC,KAAtC,CAAZ,EAA0D;AACxD,mBAAO,IAAP;AACD;AACF;AACF;AArBuE;AAAA;AAAA;AAAA;AAAA;;AAuBxEG,IAAAA,KAAK,CAAC,wBAAD,CAAL;AACA,WAAO,KAAP,CAxBwE,CAwB1D;AACf,GAzBD;;AA2BA,MAAMnB,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,QAAMa,YAAY,GAAGZ,eAAe,CAACZ,KAAK,CAACa,IAAP,CAApC;AACA,QAAMc,KAAK,GAAG,EAAd;AACA,QAAMI,WAAW,GAAGR,QAAQ,CAC1BC,YAD0B,EAE1BnB,SAAS,CAACK,KAFgB,EAG1BJ,MAAM,CAACI,KAHmB,EAI1BiB,KAJ0B,CAA5B;AAOA,QAAIK,GAAG,GAAG/B,OAAO,CAACS,KAAR,IAAiB,CAA3B;;AAEA,QAAIqB,WAAJ,EAAiB;AAAA,iCACNE,CADM;AAEb,YAAMC,EAAE,GAAGP,KAAK,CAACM,CAAD,CAAhB;AACA,YAAME,EAAE,GAAGR,KAAK,CAACM,CAAC,GAAG,CAAL,CAAhB;AAEAjC,QAAAA,KAAK,CAACa,IAAN,CAAWO,OAAX,CAAmB,UAACgB,CAAD,EAAO;AACxB,cAAIA,CAAC,CAACf,GAAF,KAAUa,EAAV,IAAgBE,CAAC,CAACd,QAAF,KAAea,EAAnC,EAAuC;AACrCH,YAAAA,GAAG,IAAII,CAAC,CAACC,GAAT;AACA;AACD;;AAED,cAAID,CAAC,CAACf,GAAF,KAAUc,EAAV,IAAgBC,CAAC,CAACd,QAAF,KAAeY,EAAnC,EAAuC;AACrCF,YAAAA,GAAG,IAAI,IAAII,CAAC,CAACE,IAAb;AACA;AACD;AACF,SAVD;AALa;;AACf,WAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACY,MAAN,GAAe,CAAnC,EAAsCN,CAAC,EAAvC,EAA2C;AAAA,cAAlCA,CAAkC;AAe1C;AACF;;AAED7B,IAAAA,QAAQ,CAACM,KAAT,GAAiB8B,MAAM,CAACC,UAAP,CAAkBT,GAAlB,EAAuBU,OAAvB,CAA+B,CAA/B,CAAjB;AACD,GAhCD;;AAkCA,sBACE,QAAC,iBAAD;AACE,IAAA,SAAS,EAAE/B,SADb;AAEE,IAAA,iBAAiB,EAAEX,KAAK,CAAC2C,iBAF3B;AAGE,IAAA,YAAY,EAAEpC,YAHhB;AAIE,IAAA,SAAS,EAAEF,SAJb;AAKE,IAAA,MAAM,EAAEC;AALV;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CAzGD;;KAAMP,S;AA2GN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\n// import { Col, Row } from \"react-bootstrap\";\n// import Form from \"react-bootstrap/Form\";\n// import swapCurrencyIcon from \"../../../Images/swapCurrencyIcon.svg\";\nimport CurrencyExchanger from \"./CurrencyExchanger\";\n\nconst Exchanger = (props) => {\n  const inputEl = document.getElementById(\"changeInput\");\n  const resultEl = document.getElementById(\"getInput\");\n  const changeCur = document.getElementById(\"changeOption\");\n  const getCur = document.getElementById(\"getOption\");\n\n  const swapCurrency = (a, b) => {\n    inputEl.value = resultEl.value;\n    changeCur.value = b;\n    getCur.value = a;\n    calculate();\n  };\n\n  const getExchangeData = (data) => {\n    const result = {};\n\n    const addToResult = (key, value, invert = true) => {\n      if (!result[key]) {\n        result[key] = [];\n      }\n\n      if (!result[key].includes(value)) result[key].push(value);\n\n      if (invert) {\n        addToResult(value, key, false);\n      }\n    };\n\n    data.forEach((value) => {\n      addToResult(value.ccy, value.base_ccy);\n    });\n\n    return result;\n  };\n\n  const getDeals = (exchangeData, sellCurrency, buyCurrency, deals = []) => {\n    const direct = exchangeData[sellCurrency].includes(buyCurrency);\n    if (direct) {\n      deals.push(sellCurrency, buyCurrency);\n      return true;\n    }\n\n    if (sellCurrency === buyCurrency) return true;\n    if (deals.includes(sellCurrency)) return false;\n\n    deals.push(sellCurrency);\n    for (let neighbor of exchangeData[sellCurrency]) {\n      if (!deals.includes(neighbor)) {\n        if (neighbor === buyCurrency) {\n          deals.push(neighbor);\n        }\n\n        if (getDeals(exchangeData, neighbor, buyCurrency, deals)) {\n          return true;\n        }\n      }\n    }\n\n    alert(\"exchange is impossible\");\n    return false; //exchange is impossible.\n  };\n\n  const calculate = () => {\n    const exchangeData = getExchangeData(props.data);\n    const deals = [];\n    const dealIsValid = getDeals(\n      exchangeData,\n      changeCur.value,\n      getCur.value,\n      deals\n    );\n\n    let sum = inputEl.value || 0;\n\n    if (dealIsValid) {\n      for (let i = 0; i < deals.length - 1; i++) {\n        const c1 = deals[i];\n        const c2 = deals[i + 1];\n\n        props.data.forEach((x) => {\n          if (x.ccy === c1 && x.base_ccy === c2) {\n            sum *= x.buy;\n            return;\n          }\n\n          if (x.ccy === c2 && x.base_ccy === c1) {\n            sum *= 1 / x.sale;\n            return;\n          }\n        });\n      }\n    }\n\n    resultEl.value = Number.parseFloat(sum).toFixed(2);\n  };\n\n  return (\n    <CurrencyExchanger\n      calculate={calculate}\n      availableCurrency={props.availableCurrency}\n      swapCurrency={swapCurrency}\n      changeCur={changeCur}\n      getCur={getCur}\n    />\n  );\n};\n\nexport default Exchanger;\n"]},"metadata":{},"sourceType":"module"}