{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/33vro/src/Components/Content/CurrencyExchanger/CurrencyExchanger.jsx\",\n    _this = this;\n\nimport React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Form from \"react-bootstrap/Form\";\nimport swapCurrencyIcon from \"../../../Images/swapCurrencyIcon.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CurrencyExchanger = function CurrencyExchanger(props) {\n  // const inputEl = document.getElementById(\"changeInput\");\n  // const resultEl = document.getElementById(\"getInput\");\n  // const changeCur = document.getElementById(\"changeOption\");\n  // const getCur = document.getElementById(\"getOption\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Change\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, _this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 45\n          }, _this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                id: \"changeInput\",\n                type: \"number\",\n                onChange: props.calculate,\n                style: {\n                  width: \"140px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                id: \"changeOption\",\n                onChange: props.calculate,\n                defaultValue: \"USD\",\n                style: {\n                  width: \"auto\"\n                },\n                children: props.availableCurrency.map(function (i, index) {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: i,\n                    children: i\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 35,\n                    columnNumber: 23\n                  }, _this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            alignSelf: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: swapCurrencyIcon,\n            alt: \"swap currency\",\n            style: {\n              width: \"50px\",\n              cursor: \"pointer\"\n            },\n            onClick: function onClick() {\n              return props.swapCurrency(changeCur.value, getCur.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Get\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, _this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 42\n          }, _this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                id: \"getInput\",\n                type: \"number\",\n                readOnly: true,\n                style: {\n                  width: \"140px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                id: \"getOption\",\n                onChange: props.calculate,\n                style: {\n                  width: \"auto\",\n                  marginRight: 0\n                },\n                children: props.availableCurrency.map(function (i, index) {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: i,\n                    children: i\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 23\n                  }, _this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = CurrencyExchanger;\nexport default CurrencyExchanger;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyExchanger\");","map":{"version":3,"sources":["/Users/mac/Desktop/33vro/src/Components/Content/CurrencyExchanger/CurrencyExchanger.jsx"],"names":["React","Col","Row","Form","CurrencyExchanger","props","calculate","width","availableCurrency","map","i","index","alignSelf","swapCurrencyIcon","cursor","swapCurrency","changeCur","value","getCur","marginRight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Form from \"react-bootstrap/Form\";\nimport swapCurrencyIcon from \"../../../Images/swapCurrencyIcon.svg\";\n\nconst CurrencyExchanger = (props) => {\n    // const inputEl = document.getElementById(\"changeInput\");\n    // const resultEl = document.getElementById(\"getInput\");\n    // const changeCur = document.getElementById(\"changeOption\");\n    // const getCur = document.getElementById(\"getOption\");\n  return (\n    <div>\n      <Form>\n        <Row>\n          <Form.Group as={Col}>\n            <Form.Label>Change</Form.Label> <br />\n            <Row>\n              <Col>\n                <Form.Control\n                  id=\"changeInput\"\n                  type=\"number\"\n                  onChange={props.calculate}\n                  style={{ width: \"140px\" }}\n                />\n              </Col>\n              <Col>\n                <Form.Select\n                  id=\"changeOption\"\n                  onChange={props.calculate}\n                  defaultValue={\"USD\"}\n                  style={{ width: \"auto\" }}\n                >\n                  {props.availableCurrency.map((i, index) => {\n                    return (\n                      <option value={i} key={index}>\n                        {i}\n                      </option>\n                    );\n                  })}\n                </Form.Select>\n              </Col>\n            </Row>\n          </Form.Group>\n          <Col style={{ alignSelf: \"center\" }}>\n            <img\n              src={swapCurrencyIcon}\n              alt=\"swap currency\"\n              style={{\n                width: \"50px\",\n                cursor: \"pointer\",\n              }}\n              onClick={() => props.swapCurrency(changeCur.value, getCur.value)}\n            />\n          </Col>\n          <Form.Group as={Col}>\n            <Form.Label>Get</Form.Label> <br />\n            <Row>\n              <Col>\n                <Form.Control\n                  id=\"getInput\"\n                  type=\"number\"\n                  readOnly\n                  style={{ width: \"140px\" }}\n                />\n              </Col>\n              <Col>\n                <Form.Select\n                  id=\"getOption\"\n                  onChange={props.calculate}\n                  style={{ width: \"auto\", marginRight: 0 }}\n                >\n                  {props.availableCurrency.map((i, index) => {\n                    return (\n                      <option value={i} key={index}>\n                        {i}\n                      </option>\n                    );\n                  })}\n                </Form.Select>\n              </Col>\n            </Row>\n          </Form.Group>\n        </Row>\n      </Form>\n    </div>\n  );\n};\n\nexport default CurrencyExchanger;\n"]},"metadata":{},"sourceType":"module"}